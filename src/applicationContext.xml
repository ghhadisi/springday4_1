<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 引入外部属性文件=============================== -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	<!--spring 整合 hibernate-->
	<!--hibernate 配置信息-->
	<!--	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
            <property name="configLocation" value="classpath:hibernate.cfg.xml.aaaa" />
        </bean>-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置Hibernate的相关属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>


		</property>
		<!-- 设置映射文件 -->
		<property name="mappingResources">
			<list>
				<value>com/hss/spring/domain/Customer.hbm.xml</value>
			</list>
		</property>
	</bean>
	<!-- Spring的入门的配置==================== -->
<!-- 	<bean name="userDAO" class="com.itheima.spring.demo1.UserDAOImpl" > -->
<!-- 		<property name="name" value="李东"/> -->
<!-- 	</bean> -->
	
	<!-- Spring的sBean的生命周期的配置=========== -->
<!-- 	<bean id="customerDAO" class="com.itheima.spring.demo2.CustomerDAOImpl" scope="prototype" init-method="setup" destroy-method="destroy"/> -->
	
	<!-- Spring的Bean的实例化的方式============= -->
	<!-- 无参数构造方法 -->
<!-- 	<bean id="bean1" class="com.itheima.spring.demo3.Bean1"></bean> -->
	
	<!-- 静态工厂实例化 -->
<!-- 	<bean id="bean2" class="com.itheima.spring.demo3.Bean2Factory" factory-method="createBean2"/> -->
	
	<!-- 实例工厂实例化 -->
<!-- 	<bean id="bean3Factory" class="com.itheima.spring.demo3.Bean3Factory"></bean> -->
<!-- 	<bean id="bean3" factory-bean="bean3Factory" factory-method="createBean3"></bean> -->

	<!-- Spring的属性注入的方式================== -->
	<!-- 构造方法的方式 -->
<!--	<bean id="car" class="com.itheima.spring.demo4.Car">
		<constructor-arg name="name" value="宝马"/>
		<constructor-arg name="price" value="800000"/>
	</bean>-->
	
	<!-- set方法的方式 -->
<!-- 	<bean id="car2" class="com.itheima.spring.demo4.Car2">
		<property name="name" value="奔驰"/>
		<property name="price" value="1000000"/>
	</bean> -->
	
	<!-- set方法注入对象类型的属性 -->
	<!-- <bean id="employee" class="com.itheima.spring.demo4.Employee">
		value:设置普通类型的值，ref:设置其他的类的id或name
		<property name="name" value="涛哥"/>
		<property name="car2" ref="car2"/>
	</bean> -->
	
	<!-- 改为p名称空间的方式 -->
	<!-- <bean id="car2" class="com.itheima.spring.demo4.Car2" p:name="奇瑞QQ" p:price="30000"></bean>
	
	<bean id="employee" class="com.itheima.spring.demo4.Employee" p:name="王东" p:car2-ref="car2"></bean> -->
	
	<!-- SpEL的属性注入 -->
	<!--<bean id="carInfo" class="com.itheima.spring.demo4.CarInfo">
	</bean>
	
	<bean id="car2" class="com.itheima.spring.demo4.Car2">
		<property name="name" value="#{carInfo.name}"></property>
		<property name="price" value="#{carInfo.calculatorPrice()}"></property>
	</bean>
	
	<bean id="employee" class="com.itheima.spring.demo4.Employee">
		<property name="name" value="#{'赵洪'}"></property>
		<property name="car2" value="#{car2}"></property>
	</bean>
	
	<import resource="applicationContext2.xml"/>	-->

<!--
	<import resource="classpath*:/com/hss/spring/day1/contextDay1.xml" />
-->


<!--	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">

	</bean>-->

	<bean id="customerAction" class="com.hss.spring.action.CustomerAction" scope="prototype">
		<property name="customerService" ref="customerService" />
	</bean>
	<bean id="customerService" class="com.hss.spring.service.CustomerServiceImpl">
		<property name="customerDao" ref="customerDao" />
	</bean>


	<!--spring 整合 hibernate-->
	<!--hibernate 配置信息-->
<!--	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml.aaaaaaa" />
	</bean>-->
	<bean id="customerDao" class="com.hss.spring.dao.CustomerDaoImpl" >
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--配置事务管理-->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--开启注解事务-->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>